import Equal;
import Ref;
import Collection;

fun f (x, y) {x + y}

fun g (x, y) {x - y}

local x1 = f (g (12, 7), 6), y1 = f (g (12, 7), 6);

fun h () {
  fun hh () {h () ()}
  hh
}

local x2 = h (), y2 = h ();

fun ff (x, y) {fun (z) {if (x > 0) then ff (x - 1, y * x, ff (x, y, z)) else y fi}}

local x3 = ff (3, 1), y3 = ff (3, 1);

local tab = ref (emptyHashTab ());

fun fff (x) {fun (y, z) {if (equal (fff (x), fff (x))) then 1 else fff (x, y, z) fi}}

local x4 = fff (3, 1, 4);

--local x = "a", y = x;
if (equal (x1, y1) && equal (x2, y2) && equal (x3, y3)) then
  printf ("Correct\n")
else
  printf ("Wrong\n")
fi
